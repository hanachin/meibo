module Meibo
  class Classroom[Grade]
    type classroom_type = "homeroom" | "scheduled"
    type classroom_types = { homeroom: "homeroom", scheduled: "scheduled" }

    TYPES: classroom_types


    attr_reader sourced_id: sourced_id
    attr_reader title: String
    attr_reader course_sourced_id: sourced_id
    attr_reader class_type: classroom_type
    attr_reader school_sourced_id: sourced_id
    attr_reader term_sourced_ids: Array[sourced_id]
    attr_reader status: status?
    attr_reader date_last_modified: DateTime?
    attr_reader grades: Array[Grade]
    attr_reader class_code: String?
    attr_reader location: String?
    attr_reader subjects: Array[String]
    attr_reader subject_codes: Array[String]
    attr_reader periods: Array[String]
    attr_reader extension_fields: Hash[Symbol, untyped]

    def initialize: (
      sourced_id: sourced_id,
      title: String,
      course_sourced_id: sourced_id,
      class_type: classroom_type,
      school_sourced_id: sourced_id,
      term_sourced_ids: Array[sourced_id],
      ?status: status?,
      ?date_last_modified: DateTime?,
      ?grades: Array[Grade],
      ?class_code: String?,
      ?location: String?,
      ?subjects: Array[String],
      ?subject_codes: Array[String],
      ?periods: Array[String],
      **Hash[Symbol, untyped] extension_fields
    ) -> void

    def collection: () -> untyped

    def homeroom?: () -> bool

    def scheduled?: () -> bool

    def course: () -> untyped

    def school: () -> untyped

    def terms: () -> untyped

    def enrollments: () -> untyped
  end
end
